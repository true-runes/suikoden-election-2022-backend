// Êù°‰ª∂‰ªò„ÅçÊõ∏Âºè
namespace ZzzConditionalFormats {
  export const setColorToRangeInSpecificCondition = (
    range: GoogleAppsScript.Spreadsheet.Range,
    sheet: GoogleAppsScript.Spreadsheet.Sheet,
    conditionValue: string,
    colorCode: string
  ) => {
    const newRule = SpreadsheetApp
      .newConditionalFormatRule()
      .whenTextEqualTo(conditionValue) // „Åì„ÅÆÊù°‰ª∂„ÅåÊ∫Ä„Åü„Åï„Çå„ÇãÊôÇ„Å´Ôºà„Çª„É´ÁÑ°ÊåáÂÆö„ÅÆÂ†¥Âêà„ÅØÊù°‰ª∂„ÅåÂà§ÂÆö„Åï„Çå„Çã„Çª„É´„ÅØ range „Å´Á≠â„Åó„ÅÑÔºâ„ÄÅ
      .setBackground(colorCode) // „Åì„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÅåÈÅ©Áî®„Åï„Çå„Å¶„ÄÅ
      .setRanges([range]) // ÈÅ©Áî®ÁØÑÂõ≤„ÅØ range „Å´„Å™„ÇãÔºàgetRange „Åó„ÅüÂÄ§„ÇíÈÖçÂàó„Å´„Åè„Çã„Çì„ÅßÊ∏°„ÅôÔºâ
      .build()

    // Êó¢Â≠ò„ÅÆ„É´„Éº„É´„Å´ËøΩÂä†„Åô„Çã
    const rules = sheet.getConditionalFormatRules()
    rules.push(newRule)

    sheet.setConditionalFormatRules(rules)
  }

  // „Äå„Ç´„Çπ„Çø„É†Êï∞Âºè„Äç„Å´„Åä„Åë„Çã„ÄÅÂà§ÂÆöÂØæË±°„Çª„É´„Å®ÈÅ©Áî®„Åï„Çå„ÇãÁØÑÂõ≤„ÅÆÈñ¢‰øÇ„ÅØÂàÜ„Åã„Çä„Å•„Çâ„ÅÑ„ÅÆ„Åß„ÄÅ‰ª•‰∏ã„Å™„Å©„ÇíÂèÇÁÖß
  // https://bamka.info/docs-google-gyo-irokae/
  export const getRuleToSetGrayBackgroundToAllRowCellsInSpecificCondition  = (
    rowNumber: number,
    sheet: GoogleAppsScript.Spreadsheet.Sheet,
    formulaSatisfied: string,
    range: GoogleAppsScript.Spreadsheet.Range
  ) => {
    // formulaSatisfied „ÅØ '=$F$2=FALSE' „Å™„Å©„ÅÆ„Çà„ÅÜ„Å™ÂΩ¢„ÅÆÊù°‰ª∂Êñá„Å´„Å™„Çã
    const newRule = SpreadsheetApp
      .newConditionalFormatRule()
      .whenFormulaSatisfied(formulaSatisfied) // „Åì„ÅÆÊù°‰ª∂„ÅåÊ∫Ä„Åü„Åï„Çå„ÇãÊôÇ„Å´„ÄÅ
      .setBackground('#a9a9a9') // „Åì„ÅÆ„É°„ÇΩ„ÉÉ„Éâ„ÅåÈÅ©Áî®„Åï„Çå„Å¶„ÄÅ
      // .setRanges([sheet.getRange(rowNumber, 1, 1, 50)]) // ÈÅ©Áî®ÁØÑÂõ≤„ÅØ range „Å´„Å™„ÇãÔºàgetRange „Åó„ÅüÂÄ§„ÇíÈÖçÂàó„Å´„Åè„Çã„Çì„ÅßÊ∏°„ÅôÔºâ
      .setRanges([range]) // ÈÅ©Áî®ÁØÑÂõ≤„ÅØ range „Å´„Å™„ÇãÔºàgetRange „Åó„ÅüÂÄ§„ÇíÈÖçÂàó„Å´„Åè„Çã„Çì„ÅßÊ∏°„ÅôÔºâ
      .build()

    return newRule
  }

  export const clearConditionalFormatsOnAllSheets = () => {
    ZzzSheetOperations.applyFunctionToAllCountingSheets((sheet) => {
      sheet.clearConditionalFormatRules();
    }, '„ÄåÊù°‰ª∂‰ªò„ÅçÊõ∏Âºè„Äç„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü')
  }

  export const setInitToIsAllCompletedColumn = (sheet: GoogleAppsScript.Spreadsheet.Sheet) => {
    const colNameToNumber = ZzzColumnNames.colNameToNumber()

    const requiredReviewColumnNumber = colNameToNumber['Ë¶Å„É¨„Éì„É•„ÉºÔºü']
    const requiredReviewColumnAlphabet = ZzzConverters.convertColumnNumberToAlphabet(requiredReviewColumnNumber)

    const completedSecondCheckColumnNumber = colNameToNumber['‰∫åÊ¨°„ÉÅ„Çß„ÉÉ„ÇØÊ∏àÔºü']
    const completedSecondCheckAlphabet = ZzzConverters.convertColumnNumberToAlphabet(completedSecondCheckColumnNumber)

    const formula = `=IF(AND(${requiredReviewColumnAlphabet}2=FALSE,${completedSecondCheckAlphabet}2=TRUE),"üåû","‚òî")`

    // „ÄåÂÖ®ÁµÇ‰∫ÜÔºü„ÄçÂàó
    const range = ZzzCellOperations.getRangeSpecificColumnRow2ToRow101(
      colNameToNumber['ÂÖ®ÁµÇ‰∫ÜÔºü'],
      sheet
    )

    // '‚òî' „Å®„ÅÑ„ÅÜÂàùÊúüÂÄ§„ÇíË®≠ÂÆö„Åô„Çã
    range.setValue(formula)
    range.setHorizontalAlignment('center');

    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'üåû',
      '#ccffcc' // Green
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      '‚òî',
      '#ffc0cb' // Red
    )
  }

  export const setInitToIsRequiredReview = (sheet: GoogleAppsScript.Spreadsheet.Sheet) => {
    const colNameToNumber = ZzzColumnNames.colNameToNumber()

    const range = ZzzCellOperations.getRangeSpecificColumnRow2ToRow101(
      colNameToNumber['Ë¶Å„É¨„Éì„É•„ÉºÔºü'],
      sheet
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'TRUE',
      '#ffc0cb' // Red
    )
  }

  export const setInitToIsCompletedSecondCheck = (sheet: GoogleAppsScript.Spreadsheet.Sheet) => {
    const colNameToNumber = ZzzColumnNames.colNameToNumber()

    const range = ZzzCellOperations.getRangeSpecificColumnRow2ToRow101(
      colNameToNumber['‰∫åÊ¨°„ÉÅ„Çß„ÉÉ„ÇØÊ∏àÔºü'],
      sheet
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'TRUE',
      '#ccffcc' // Green
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'FALSE',
      '#ffc0cb' // Red
    )
  }

  export const setInitToIsCompletedFavorite = (sheet: GoogleAppsScript.Spreadsheet.Sheet) => {
    const colNameToNumber = ZzzColumnNames.colNameToNumber()

    const range = ZzzCellOperations.getRangeSpecificColumnRow2ToRow101(
      colNameToNumber['„Åµ„ÅÅ„ÅºÊ∏àÔºü'],
      sheet
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'TRUE',
      '#ccffcc' // Red
    )
    ZzzConditionalFormats.setColorToRangeInSpecificCondition(
      range,
      sheet,
      'FALSE',
      '#ffc0cb' // Red
    )
  }
}
